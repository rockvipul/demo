{%- comment -%} Settings {%- endcomment -%}
{%- assign show_title = section.settings.show_title -%}
{%- assign show_sort_filter = section.settings.show_sort_filter -%}
{%- assign show_banner = section.settings.show_banner -%}
{%- assign show_featured_image = section.settings.show_featured_image -%}
{%- assign enable_infinity_scroll = settings.enable_infinity_scroll -%}
{%- assign enable_color_swatches = settings.enable_color_swatches -%}
{%- assign show_reviews = settings.show_reviews -%}
{%- assign enable_video_looping = settings.enable_video_looping -%}
{%- assign filter_mode = section.settings.filter_mode -%}
{%- unless filter_mode == 'hidden' -%}
  {%- assign enable_filters = true -%}
{%- else -%}
  {%- assign enable_filters = false -%}
{%- endunless -%}

{% comment %}
  Set collectionBlock size classes
  These are applied in the collectionGrid-block.liquid file
{% endcomment %}
{%- assign products_rows = settings.products_rows | plus: 0 -%}
{%- assign products_columns = settings.products_columns | plus: 0 -%}
{%- assign products_columns_mobile = settings.products_columns_mobile | plus: 0 -%}
{%- assign products_limit = products_columns | times: products_rows -%}
{%- assign columns_size = products_columns | replace: '1', '' -%}
{%- assign columns_size_mobile = products_columns_mobile | replace: '1', '' -%}
{%- assign collection_block_size = 'lg_s1' | append: columns_size -%}
{%- assign collection_block_size_mobile = 's1' | append: columns_size_mobile -%}

{% comment %} Set tablet size to be one-half {% endcomment %}
{%- if products_columns > 2 -%}
	{%- assign collection_block_size = 'lg_s1' | append: columns_size | append: ' med_s13' -%}
{%- endif -%}

{%- assign last_product = products_limit -%}
{%- assign before_last_product = products_limit | minus: 1 -%}

{%- if show_featured_image -%}
	{%- if products_columns == 2 or products_columns == 3 -%}
		{%- if forloop.index == last_product -%}
			{%- assign last_element_class = 'visually-hidden' -%}
		{%- endif -%}
	{%- endif -%}
{%- endif -%}

{%- assign banner_image = collection.image -%}
{%- if collection.handle == 'all' %}
	{%- assign banner_image = section.settings.banner_image -%}
{%- endif %}

{%- comment -%} Assign all selected tags to container data-tags attribute {%- endcomment -%}
{%- if enable_filters -%}
  {%- assign selected_tags = '' -%}

  {%- for tag in current_tags -%}
    {%- assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle -%}
    {%- assign selected_tags = selected_tags | append: current_tag_handle -%}
    {%- unless forloop.last -%}
      {%- assign selected_tags = selected_tags | append: '+' -%}
    {%- endunless -%}
  {%- endfor -%}
{%- endif -%}

{%- if show_banner and banner_image -%}
	{%- assign banner_color_text = section.settings.banner_color_text -%}
	<style>
		{%- if settings.color_header_bg_home == 'rgba(0,0,0,0)' -%}
			.site-header:not(.header--megamenu-visible):not(.header--search-visible):not(.header--has-scrolled) { color: {{ banner_color_text }}; }
		{%- endif -%}
		.banner .page-title { color: {{ banner_color_text }}; }
		.banner .page-title::before { background-color: {{ banner_color_overlay }}; opacity: {{ banner_overlay_opacity }}; }
		.logo__image .logo__image--home { position: relative; visibility: visible; }
		.logo__image .logo__image--other:not(.logo__image--single) { position: absolute; visibility: hidden; }
	</style>
{%- endif -%}

<div
	data-section-id="{{ section.id }}"
	data-section-type="collection-template"
	data-filters="{{ enable_filters }}"
	data-filter-mode="{{ filter_mode }}">

	{%- capture page_title -%}
		{%- if show_title or collection.handle == 'all' -%}
		<div class="page-title">
			<div class="container" data-collection-banner-content>
				{%- if show_title -%}
					<div class="row row-sm page-title__wrapper">
                      <h3>NOS PRODUITS</h3>
						<h1 class="page-title__heading">
							{{- collection.title -}}
							{%- for tag in collection.all_tags -%}
								{%- if current_tags contains tag -%}<span class="page-title__heading-tag">&#8250; {{ tag | remove: "galenique_" | remove: "besoin_" | remove: "selection_"   }}</span>{%- endif -%}
							{%- endfor -%}
						</h1>

						{%- if collection.description != blank -%}
							<div class="page-title__text">
								{{- collection.description -}}
							</div>
						{%- endif -%}
					</div>
				{%- endif -%}
			</div>
		</div>
		{%- endif -%}
	{%- endcapture -%}

	{%- if show_banner and banner_image -%}
		{%- render 'banner--page', page_title: page_title, banner_image: banner_image -%}
	{%- else -%}
		{{- page_title -}}
	{%- endif -%}

	<section class="collectionGrid container-wrap" data-show-quickView="{{ settings.show_quick_view }}" data-collection-wrapper>
		{%- if enable_filters -%}
			{%- assign position_filters = section.settings.position_filters -%}

{%- capture filter_tags -%}
	{%- assign tags_list = '' -%}

	{%- case filter_mode -%}
		{%- when 'tag' -%}
			{%- for tag in collection.all_tags -%}
				{%- unless tags_list contains tag or tag contains 'badge' or tag contains '__tab' -%}
					{%- capture temp_list -%}{{ tags_list | append: tag | append: ' ' }}{%- endcapture -%}
					{%- assign tags_list = tempList -%}
					<li class="collection__filter-tag collection__filter-tag--default {% if current_tags contains tag %}is-active{% endif %}" data-collection-filter-tag>
						<button class="collection__filter-tag-btn" data-tag="{{ tag | handleize }}" data-collection-filter-tag-button>
							{{- tag -}}
							{%- render 'icon-check' -%}
						</button>
					</li>
				{%- endunless -%}
			{%- endfor -%}

		{%- when 'group' -%}
			{%- assign all_groups = '' -%}
			{%- assign groups = '' -%}

			{%- for tag in collection.all_tags -%}
				{%- assign tag_parts = tag | split: '_' -%}
				{%- if tag_parts.size == 2 -%}

					{% unless all_groups contains tag_parts.first %}
						{%- assign groups = groups | append: tag_parts.first | append: ',' -%}
						{%- assign all_groups = all_groups | append: groups -%}
					{%- endunless -%}

				{%- endif -%}
			{%- endfor -%}

			{%- assign groups = groups | split: ',' | compact | uniq -%}
			{%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}

			{%- for group in groups -%}
				{%- assign group_label = group | downcase -%}

				{%- comment -%} Don't show "badge" as a filter {%- endcomment -%}
				{%- unless group_label == 'badge' -%}

					{%- if color_label contains group_label and settings.enable_color_swatches -%}
						{%- assign is_color_swatch = true -%}
					{%- else -%}
						{%- assign is_color_swatch = false -%}
					{%- endif -%}

					<div class="collection__filter collection__filter--accordion-expanded" data-collection-filter>
						<button class="collection__filter-title" tabindex="0" data-collection-filter-title>
							<span>{{ group }}</span>
							{%- render 'icon-arrow' -%}
						</button>
						<div class="collection__filter-container">
							<ul class="collection__filter-tags {% if is_color_swatch %}collection__filter-tags--swatches{% endif %}">
								{%- for tag in collection.all_tags -%}
									{%- assign tag_parts = tag | split: '_' -%}
									{%- assign group_tag = tag_parts.last -%}

									{%- if tag_parts.first == group -%}
										{%- if is_color_swatch -%}
											<li class="collection__filter-tag collection__filter-tag--swatch swatch{% if current_tags contains tag %} is-active{% endif %}"
												data-collection-filter-tag>
												<button
													class="swatch__element swatch__element--{{ group_tag | handle }} collection__filter-tag-btn"
													data-value="{{ group_tag }}"
													data-tag="{{ tag | handleize }}"
													data-collection-filter-tag-button>
													<div class="swatch__label">
														<span class="swatch__color swatch__color--{{ group_tag | handle }}" style="background-color: {{ group_tag | split: ' ' | last | handle }}; background-image: url({{ value | handle | append: '.' | append: file_extension | asset_url }})"></span>
														<span class="swatch__color-name">{{ group_tag }}</span>
													</div>
												</button>
											</li>
										{%- else -%}

											{% comment %} Check if the tag value is a number {% endcomment %}
											{%- capture tag_value -%}{{ group_tag | abs }}{%- endcapture -%}

											{%- if tag_value == group_tag -%}
												{%- assign is_number = true -%}
											{%- else -%}
												{%- assign is_number = false -%}
											{%- endif -%}

											<li class="collection__filter-tag {% if is_number %}collection__filter-tag--number{% else %}collection__filter-tag--default{% endif %} {% if current_tags contains tag %}is-active{% endif %}"
												data-collection-filter-tag>
												<button data-tag="{{ tag | handleize }}" class="collection__filter-tag-btn" data-collection-filter-tag-button>
													{{- group_tag -}}
													{%- unless is_number -%}
														{%- render 'icon-check' -%}
													{%- endunless -%}
												</button>
											</li>
										{%- endif -%}
									{%- endif -%}
								{%- endfor -%}
							</ul>
						</div>
					</div>

				{%- endunless -%}
			{%- endfor -%}

	{%- endcase -%}
{%- endcapture -%}

{%- if filter_tags != blank -%}
	<div class="collection__filters collection__filters--{{ position_filters }} {% if current_tags != blank %}collection__filters--has-tags-selected{% endif %}" data-collection-filters>
	{%- if settings.show_breadcrumbs -%}
						<div class="breadcrumbs block">
							{%- render 'site-breadcrumbs' -%}
						</div>
					{%- endif -%}	
      <div class="container">
          
			<div class="collection__filters-list">
				<div class="collection__filters-reset">
					<button class="collection__filters-reset-btn {% if current_tags != blank %}is-visible{% endif %}" {% if current_tags == blank %}style="display: none;"{% endif %} data-collection-filters-reset-button>
						{%- render 'icon-close' -%}
						<span class="collection__filters-reset-btn-text">
							{{ 'collections.tag_filtering.reset' | t }}
							<span class="products-found" data-products-found-label>- {{ 'collections.products_with_count' | t: count: collection.products_count }}</span>
						</span>
					</button>
				</div>

				{%- case filter_mode -%} 
{% comment %}
				{%- when 'tag' -%}
					<div class="collection__filter collection__filter--accordion-expanded" data-collection-filter>
						<button class="collection__filter-title" data-collection-filter-title>
							<span>{{ 'collections.tag_filtering.filters' | t }}</span>
							{%- render 'icon-arrow' -%}
						</button>
						<div class="collection__filter-container">
							<ul class="collection__filter-tags">
								{{- filter_tags -}}
							</ul>
						</div>
                      	
					</div>
              {% endcomment %}
				{%- when 'group' -%}
					{{- filter_tags -}}
				{%- endcase -%}
              <div class="product-filter-container">
                <label>Filter par:</label>
                <select class="filter-dropdown">
                   <option value="">Galénique</option>
                   {% for tag in collection.tags %} 
					{%- if tag contains 'galenique_' -%}
                   <option value="{{ tag | handle }}" >{{ tag | remove: "galenique_" }}</option>
                    {% endif %}  {% endfor %}
                </select>
                <select class="filter-dropdown">
                   <option value="">Besoins</option>
                   {% for tag in collection.tags %} 
					{%- if tag contains 'besoin_' -%}
                   <option value="{{ tag | handle }}" >{{ tag | remove: "besoin_" }}</option>
                    {% endif %}  {% endfor %}
                </select>
                <select class="filter-dropdown">
                   <option value="">Notre sélection</option>
                   {% for tag in collection.tags %} 
					{%- if tag contains 'selection_' -%}
                   <option value="{{ tag | handle }}" >{{ tag | remove: "selection_" }}</option>
                    {% endif %}  {% endfor %}
                </select>
              </div>
			</div>
		</div>
	</div> 
{%- endif -%} 
		{%- endif -%}
		<div class="collectionGrid__wrapper">
			<div class="container">
<!-- 				<div class="collectionGrid-nav collectionGrid-row row inline">
					<div class="grid-sort block">
						{%- if show_sort_filter -%}
							<div class="collectionGrid-sort block">
								<div class="selector-wrapper">
									<label for="#collectionSort">{{ 'collections.sorting_dropdown.label' | t }}</label>
									{%- render 'icon-arrow' -%}
									{%- assign sort_by = collection.sort_by -%}
									<label for="collectionSort" class="accessible-label">{{ 'general.accessibility.sort_by' | t }}</label>
									<select class="sort" id="collectionSort" data-collection-sort>
										<option value="">{{ 'collections.sorting_dropdown.all' | t }}</option>
										<option value="best-selling" {% if sort_by == "best-selling" %}selected{% endif %}>{{ 'collections.sorting_dropdown.best_selling' | t }}</option>
										<option value="price-ascending" {% if sort_by == "price-ascending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.price_ascending' | t }}</option>
										<option value="price-descending" {% if sort_by == "price-descending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.price_descending' | t }}</option>
										<option value="title-ascending" {% if sort_by == "title-ascending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.title_ascending' | t }}</option>
										<option value="title-descending" {% if sort_by == "title-descending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.title_descending' | t }}</option>
										<option value="created-ascending" {% if sort_by == "created-ascending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.created_ascending' | t }}</option>
										<option value="created-descending" {% if sort_by == "created-descending" %}selected{% endif %}>{{ 'collections.sorting_dropdown.created_descending' | t }}</option>
									</select>
								</div>
							</div>
						{%- endif -%}
					</div>
				</div> -->
				<div class="collectionGrid-load icon-load-more" data-icon-load-more></div>

				{%- if collection.all_products_count == 0 -%}
					<div class="collection-no-products row inline u-center empty-collection">
						<h4>{{ 'collections.errors.no_products' | t }}</h4>
						<a class="button" href="{{ routes.all_products_collection_url }}">{{ 'collections.errors.continue_shopping' | t }}</a>
					</div>
				{%- endif -%}
			</div>

			{%- if collection.all_products_count > 0 -%}
				{%- paginate collection.products by products_limit -%}

					<div class="js-collectionGrid collectionGrid-row collectionGrid-row--grid{% if enable_infinity_scroll %} EndlessScroll{% endif %}"
						data-section-id="{{ section.id }}"
						data-show_quantity="{{ settings.show_quantity }}"
						data-show_reviews="{{ show_reviews }}"
						data-yotpo="{{ settings.enable_yotpo }}"
						data-yotpo-id="{{ settings.yotpo_ID }}"
						data-enable-color-swatches="{{ enable_color_swatches }}"
						data-image-aspectratio="{{ settings.image_aspect_ratio }}"
						data-image-size="{{ settings.image_size }}"
						data-tags='{% if selected_tags != blank %}{{ selected_tags | split: '+' | json }}{% else %}[]{% endif %}'
						data-sort="{{ collection.sort_by | default: collection.default_sort_by }}"
						data-collection="{{ collection.url | default: routes.all_products_collection_url }}"
						data-collection-products>
						{%- if show_featured_image and columns_size != '5' and paginate.current_page == 1 and collection.all_products_count > 0 -%}
							{% comment %} Featured Content Settings {% endcomment %}
							{%- assign featuredImage = section.settings.featured_image -%}
							{%- assign featuredHeading = section.settings.featured_heading -%}
							{%- assign featuredText = section.settings.featured_text -%}
							{%- assign featuredButtonText = section.settings.featured_button_text -%}
							{%- assign featuredButtonLink = section.settings.featured_button_link -%}
							{%- assign featuredButtonStyle = section.settings.featured_button_style -%}
							{%- assign featuredColorText = section.settings.featured_color_text -%}
							{%- assign featuredColorOverlay = section.settings.featured_color_overlay -%}
							{%- assign featuredOverlayOpacity = section.settings.featured_overlay_opacity | times: 0.01 | round: 2 -%}

							<style>
								.featured__content { color: {{ featuredColorText }}; }
								.featured__image::before { background-color: {{ featuredColorOverlay }}; opacity: {{ featuredOverlayOpacity }}; }
							</style>

							<div class="collectionBlock js-collectionBlock featured-block featured-block--mobile-{{ products_columns_mobile }} s1 {% if columns_size == '4' %}lg_s12{% else %}{{ collection_block_size }}{% endif %} med_s13">
								<div class="featured-block__container">
									<div class="featured-block__wrapper">
										{%- unless featuredImage == blank -%}
											<div class="featured__image lazyload"
												data-bgset="{% render 'bgset', image: featuredImage %}"
												data-sizes="auto"
												data-parent-fit="cover"
												data-aspectratio="{{ featuredImage.aspect_ratio }}"></div>
											<noscript>
												<div class="featured__image no-js-image" style="background-image: url({{ section.settings.featured_image | img_url: '1024x' }});"></div>
											</noscript>
										{%- else -%}
											<div class="featured__image svg-placeholder">
												{{- 'image' | placeholder_svg_tag -}}
											</div>
										{%- endunless -%}

										{%- if featuredHeading != blank or featuredText != blank or featuredButtonText != blank -%}
											<div class="featured__content">
												{%- if featuredHeading -%}
													<h2>{{ featuredHeading }}</h2>
												{%- endif -%}

												{%- if featuredText -%}
													{{- featuredText -}}
												{%- endif -%}

												{%- if featuredButtonText != blank -%}
													{%- if featuredButtonLink == blank -%}
														{%- assign featuredButtonLink = "#!" -%}
													{%- endif -%}
													<a href="{{ featuredButtonLink }}" title="{{ featuredButtonText }}" class="button button--{{ featuredButtonStyle }}">{{ featuredButtonText }}</a>
												{%- endif -%}
											</div>
										{%- endif -%}
									</div>
								</div>
							</div>
						{%- endif -%}

						{%- if collection.products_count > 0 -%}

							{%- for product in collection.products -%}
								{%- render 'product-grid-item', product: product, collection_block_size: collection_block_size, collection_block_size_mobile: collection_block_size_mobile, index: forloop.index, last_element_class: last_element_class -%}
							{%- endfor -%}

						{%- else -%}
							<div class="collection-no-products row inline u-center empty-collection">
								<p>{{ 'collections.errors.no_products_by_filter' | t : products_count: collection.products_count }}</p>

								{%- if enable_filters and current_tags != blank -%}
									<button class="collection__filters-reset-btn {% if current_tags != blank %}is-visible{% endif %}" {% if current_tags == blank %}style="display: none;"{% endif %} data-collection-filters-reset-button>
										{%- render 'icon-close' -%}
										<span class="collection__filters-reset-btn-text">
											{{ 'collections.tag_filtering.reset' | t }}
											<span class="products-found" data-products-found-label>- {{ 'collections.products_with_count' | t: count: collection.products_count }}</span>
										</span>
									</button>
								{%- endif -%}
							</div>
						{%- endif -%}

						{%- if enable_infinity_scroll -%}
							<div class="pagination pagination--infinity" id="AjaxinatePagination">
								{%- if paginate.next -%}
									<div class="pagination u-center" data-collection-pagination>
										<a href="{{ paginate.next.url }}" class="loadMore visually-hidden">{{ 'collections.pagination.load_more' | t }}</a>
										<div class="icon-load-more"></div>
									</div>
								{%- endif -%}
							</div>
						{%- else -%}
							{%- if paginate.pages > 1 -%}
								{%- render 'pagination', paginate: paginate -%}
							{%- endif -%}
						{%- endif -%}

					</div>
				{%- endpaginate -%}
			{%- endif -%}
		</div>
	</section>
</div>

{%- render 'product-quick-view' -%}

{% schema %}
	 {
	"name": "Collection pages",
	"settings": [
		{
			"type": "header",
			"content": "Collection settings"
		},
		{
			"type": "checkbox",
			"id": "show_title",
			"label": "Show title",
			"default": true
		},
		{
			"type": "checkbox",
			"id": "show_sort_filter",
			"label": "Show Sort By filter",
			"default": true
		},
		{
			"type": "select",
			"label": "Filter mode",
			"id": "filter_mode",
			"info": "Filters by group requires specific tag formatting. [Learn more](https://help.shopify.com/manual/using-themes/themes-by-shopify/supply#product-tips-tips-specific)",
			"default": "tag",
			"options": [
				{ "label": "Hidden", "value": "hidden" },
				{ "label": "By tag", "value": "tag" },
				{ "label": "By group", "value": "group" }
			]
		},
		{
			"type": "select",
			"id": "position_filters",
			"label": "Position",
			"default": "left",
			"options": [
				{ "label": "Top", "value": "top" },
				{ "label": "Left", "value": "left" }
			]
		},
		{
			"type": "header",
			"content": "Banner image"
		},
		{
			"type": "checkbox",
			"id": "show_banner",
			"label": "Show collection image as a banner",
			"default": true
		},
		{
			"type": "image_picker",
			"id": "banner_image",
			"label": "Default image",
			"info": "Will be shown on collections/all"
		},
		{
			"type": "select",
			"id": "banner_height",
			"label": "Height",
			"options": [
				{
					"value": "one-hundred",
					"label": "Full screen height"
				},
				{
					"value": "original-height",
					"label": "Image height"
				},
				{
					"value": "big",
					"label": "750px"
				},
				{
					"value": "normal",
					"label": "650px"
				},
				{
					"value": "small",
					"label": "550px"
				}
			],
			"default": "small"
		},
		{
			"type": "select",
			"id": "banner_text_position",
			"label": "Text position",
			"default": "center",
			"options": [
				{ "label": "Left", "value": "left" },
				{ "label": "Center", "value": "center" },
				{ "label": "Right", "value": "right" },
				{ "label": "Bottom left", "value": "bottom-left" },
				{ "label": "Bottom right", "value": "bottom-right" }
			]
		},
		{
			"type": "header",
			"content": "Colors"
		},
		{
			"type": "color",
			"id": "banner_color_text",
			"label": "Text",
			"default": "#ffffff"
		},
		{
			"type": "color",
			"id": "banner_color_overlay",
			"label": "Overlay",
			"default": "#333333"
		},
		{
			"type": "range",
			"id": "banner_overlay_opacity",
			"label": "Overlay opacity",
			"step": 5,
			"max": 95,
			"min": 0,
			"unit": "%",
			"default": 0
		},
		{
			"type": "header",
			"content": "Layout"
		},
		{
			"type": "checkbox",
			"id": "show_featured_image",
			"label": "Show featured image",
			"default": false
		},
		{
			"type": "image_picker",
			"id": "featured_image",
			"label": "Image"
		},
		{
			"type": "text",
			"id": "featured_heading",
			"label": "Heading",
			"default":"Use this image showcase promotional content."
		},
		{
			"type": "richtext",
			"id": "featured_text",
			"label": "Text",
			"default":"<p>Elaborate on it with rich text</p>"
		},
		{
			"type": "text",
			"id": "featured_button_text",
			"label": "Button label",
			"default":"Learn More"
		},
		{
			"type": "url",
			"id": "featured_button_link",
			"label": "Button link"
		},
		{
			"type": "select",
			"id": "featured_button_style",
			"label": "Button style",
			"default": "primary",
			"options": [
				{ "label": "Primary", "value": "primary" },
				{ "label": "Secondary", "value": "secondary" }
			]
		},
		{
			"type": "color",
			"id": "featured_color_text",
			"label": "Text",
			"default": "#ffffff"
		},
		{
			"type": "color",
			"id": "featured_color_overlay",
			"label": "Overlay",
			"default": "#333333"
		},
		{
			"type": "range",
			"id": "featured_overlay_opacity",
			"label": "Overlay opacity",
			"step": 5,
			"max": 95,
			"min": 0,
			"unit": "%",
			"default": 30
		}
	]
}
{% endschema %}
<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection pages */
  const collFilters = document.querySelectorAll('.filter-dropdown');

  if (collFilters.length > 0) {
    collFilters.forEach((collFilter) => {
      collFilter.addEventListener('change', function(){
        var newTags = [];
        collFilters.forEach((collFilter) => {
          for(var i = 0; i <= collFilter.length-1; i++){
            if(collFilter[i].selected == true && collFilter[i].value != "") {
              newTags.push(collFilter[i].value);
            }
          }
        });

        if (newTags.length) {
          var query = newTags.join('+');
          window.location.href = '/collections/{{ collection.handle }}/' + query;
        }
        else {
          {% if collection.handle %}
          window.location.href = '/collections/{{ collection.handle }}';
          {% elsif collection.products.first.type == collection.title %}
          window.location.href = '{{ collection.title | url_for_type }}';
          {% elsif collection.products.first.vendor == collection.title %}
          window.location.href = '{{ collection.title | url_for_vendor }}';
          {% endif %}
        }
      });
    });
  }
</script>